name: Docker-CI

on:
  push:
    branches: [docker]
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]
    branches: [docker]

jobs:
  build-frontend-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@fd7ecdac7caf8e2c541a48c9bcc280aae59a8461 # master

      - name: Cache Docker layers
        uses: jpribyl/action-docker-layer-caching@616dc4b3a7ba46d074f885cc681ca9db6309f376 # master
        continue-on-error: true
        # workaround for https://github.com/satackey/action-docker-layer-caching/issues/169#issuecomment-1217408538
        with:
          key: docker-layer-cache-{hash}
          restore-keys: |
            docker-layer-cache-
            layer-docker-layer-cache-

      - name: Restore the cache
        uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: .docker-cargo-cache
          key: docker-cargo-cache_${{ runner.os }}

      - name: Build the app
        run: |
          mkdir -p .docker-cargo-cache
          cd frontend/scripts/docker-buildfiles
          sed -i -e 's|^#CI-CACHE-INJECT-MARKER:|COPY .docker-cargo-cache $cargo_cache|' Dockerfile
          sed -i -e 's|^#CI-CACHE-RETRIEVE-MARKER:|COPY --from=builder $cargo_cache $cargo_cache|' Dockerfile
          cat Dockerfile
          docker-compose build --progress=plain

      - name: Retrieve the cache
        continue-on-failure: true
        run: |
          docker container create --name tmp appflowy/appflowy:latest
          docker container cp tmp:/cargo-cache .docker-cargo-cache

      - name: Save the cache
        if: ${{ github.ref == 'refs/heads/docker' }}
        uses: actions/cache/save@v3
        with:
          path: .docker-cargo-cache
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
